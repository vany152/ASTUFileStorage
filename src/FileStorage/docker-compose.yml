version: "3.9"

services:
    file-storage:
        container_name: ${FILE_STORAGE_CONTAINER_NAME}
        image: ${FILE_STORAGE_IMAGE}
        build:
            context: .
            dockerfile: ${FILE_STORAGE_DOCKERFILE}
            args:
                INTERNAL_HTTP_PORT: ${FILE_STORAGE_INTERNAL_HTTP_PORT}
                INTERNAL_HTTPS_PORT: ${FILE_STORAGE_INTERNAL_HTTPS_PORT}
                PEM_CERTIFICATE_FILE_HOST_PATH: ${FILE_STORAGE_PEM_CERTIFICATE_FILE_HOST_PATH}
        ports:
            - ${FILE_STORAGE_EXPOSING_HTTP_PORT}:${FILE_STORAGE_INTERNAL_HTTP_PORT}
            - ${FILE_STORAGE_EXPOSING_HTTPS_PORT}:${FILE_STORAGE_INTERNAL_HTTPS_PORT}
        volumes:
            - ${FILE_STORAGE_EXPOSING_DIRECTORY_PATH}:${FILE_STORAGE_INTERNAL_DIRECTORY_PATH}
            - ${EXTERNAL_HTTPS_CERTIFICATE_PATH}/${EXTERNAL_HTTPS_CERTIFICATE_NAME}:${FILE_STORAGE_INTERNAL_HTTPS_CERTIFICATE_PATH}:ro
        environment:
            USE_HTTPS_REDIRECTION: ${FILE_STORAGE_USE_HTTPS_REDIRECTION}
            STORAGE_DIRECTORY_PATH: ${FILE_STORAGE_INTERNAL_DIRECTORY_PATH}
            
            DATABASE_HOST: ${DATABASE_CONTAINER_NAME}
            DATABASE_PORT: ${DATABASE_INTERNAL_PORT}
            DATABASE_NAME: ${DATABASE_NAME}
            DATABASE_USERNAME: ${DATABASE_USER}
            DATABASE_PASSWORD: ${DATABASE_PASSWORD}
            
            ASPNETCORE_Kestrel__Certificates__Default__Password: ${FILE_STORAGE_HTTPS_CERTIFICATE_PASSWORD}
            ASPNETCORE_Kestrel__Certificates__Default__Path: ${FILE_STORAGE_INTERNAL_HTTPS_CERTIFICATE_PATH}
            ASPNETCORE_HTTPS_PORT: ${FILE_STORAGE_INTERNAL_HTTPS_PORT}
            ASPNETCORE_URLS: ${FILE_STORAGE_ASPNETCORE_URLS}
            ASPNETCORE_ENVIRONMENT: ${FILE_STORAGE_ASPNETCORE_ENVIRONMENT}
        healthcheck:
            test: ["CMD-SHELL", "curl --fail http://localhost:${FILE_STORAGE_INTERNAL_HTTP_PORT}/ping || exit 1"]
            interval: 10s
            timeout: 5s
            retries: 5
            start_period: 10s
        networks:
            - file_storage_network

    postgres:
        container_name: ${DATABASE_CONTAINER_NAME}
        image: postgres:17-alpine
        environment:
            POSTGRES_DB: ${DATABASE_NAME}
            POSTGRES_USER: ${DATABASE_USER}
            POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
            PGDATA: ${DATABASE_DATA_INTERNAL_PATH}/pgdata
        ports:
            - ${DATABASE_EXPOSING_PORT}:${DATABASE_INTERNAL_PORT}
        volumes:
            - ${DATABASE_INITIAL_SCRIPTS_PATH}:/docker-entrypoint-initdb.d
            - ${DATABASE_DATA_EXPOSING_PATH}:${DATABASE_DATA_INTERNAL_PATH}
        healthcheck:
            test: ["CMD-SHELL", "pg_isready -U admin -d ${DATABASE_NAME}"]
            interval: 10s
            timeout: 5s
            retries: 5
            start_period: 10s
        restart: unless-stopped
        deploy:
            resources:
                limits:
                    cpus: '1'
                    memory: 512M
        networks:
            - file_storage_network

networks:
    file_storage_network:
        driver: bridge
